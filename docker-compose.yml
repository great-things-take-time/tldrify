version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: tldrify-postgres
    environment:
      POSTGRES_USER: tldrify_user
      POSTGRES_PASSWORD: tldrify_pass_2024
      POSTGRES_DB: tldrify_db
      POSTGRES_HOST_AUTH_METHOD: md5
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tldrify_user -d tldrify_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - tldrify-network

  redis:
    image: redis:7-alpine
    container_name: tldrify-redis
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - tldrify-network

  qdrant:
    image: qdrant/qdrant:v1.7.4
    container_name: tldrify-qdrant
    environment:
      QDRANT__SERVICE__HTTP_PORT: 6333
      QDRANT__SERVICE__GRPC_PORT: 6334
      QDRANT__LOG_LEVEL: INFO
    volumes:
      - qdrant_data:/qdrant/storage
    ports:
      - "6333:6333"
      - "6334:6334"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:6333/readyz || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - tldrify-network

  flower:
    image: mher/flower:2.0
    container_name: tldrify-flower
    command: celery --broker=redis://redis:6379/0 flower --port=5555
    ports:
      - "5555:5555"
    depends_on:
      - redis
    networks:
      - tldrify-network
    profiles:
      - monitoring

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  qdrant_data:
    driver: local

networks:
  tldrify-network:
    driver: bridge